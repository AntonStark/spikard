Среда, 6 января 2016, 13:55:21
Первая тестовая запись в дневник разработки. Я наконец его доделал)
Среда, 6 января 2016, 21:06:57
Обозначу TODO_List. Можно было бы, конечно, подправить управление в главном меню: управление клавишами, а не командами, автодополнение и т.д., но без этого можно обойтись, надо сконцентрироваться на необходимом. Но кое-что допилить всё-таки нужно: 1) сокрытие пароля при вводе, а то совсем уж смешно выглядит; 2) хранить не пароль, а его хэш; 3) шифрование файла дневника.
Более отдалённый TODO. Реализовать систему плагинов в ядре и первый плагин - служебный - окно графического ввода-вывода. Затем дневник тоже вынести в отдельный плагин и усовершенствовать. Всё-таки сделать систему логирования.
По части разработки графического модуля. В первую очередь нужно определить интерфейс общения его с ядром. Ясно, что это должно быть обычное системное окно, реагирующее на действия мыши и клавиатуры, захватывающее фокус и работающее в паралельном режиме с консолью, в которой было запущено ядро.
При этом поведение при том же нажатии и перемещении мыши в одних случаях будет рисованием линии, в других - перетаскиванием символа под мышью, в третьих - поворотом камеры обзора. Это зависит от типа файла открытого для редактирования в окне и от контекста в этом файле. Если мы имеем дело с графической разработкой алгоритма, то нужно иметь представление о доступных блоках.
1) в интерфейсе нужен функционал для загрузки ядром плагина и получения индекса интерфейса загруженного плагина (1. 2) работа с файлами-проектами идёт через ядро, следовательно оно должно предоставлять функционал для открытия и закрытия файла (2. вновь подгружаемые плагины могут=будут влиять на поведение графического модуля в ответ на действия пользователя. то есть вместе с получением индекса возможностей нужно переписывать обработчики. звучит не очень. на этой "радостной" ноте и закончу.
Суббота, 9 января 2016, 18:15:49
Так, сокрытие пароля - выполнено, хеш пароля - тоже. Без шифрования файла разработки можно обойтись, пока.
Первая попытка причесать интерфейс, даже основанный на командах, отняла больше 4 часов и оказалась не очень плодотворна, мда. В проекте выделена тестовая ветвь, нововведения сначала буду испытывать "на кошках".
Но стуктуризация интерфейса необходима до введения плагинов. Потому что с плагинами нужно добавить функционал для простого расширения интерфейса. Вот и TODO на ближайшее время. А более отдалённое - сделать команды создания нового плагина (создание исходника с заданным именем и подписанного информацией о версии основной программы, его поддерживающей, его версией и т.д. и каркасом для описания функционала), скрипт для превращения исходника в плагин (динамическую библиотеку) уже есть, выделить дневник в отдельный плагин и отработать механизм модернизации интерфейса. После этого можно будет уверенными шагами переходить к разработке графического канала ввода-вывода.
